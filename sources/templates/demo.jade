html(ng-app='app')
  meta(name='viewport' content='width=device-width, user-scalable=no')

  block styles
    link(rel='stylesheet' href='/docs/vendor.css')

  style.
    mn-chips {
      font-size: 1.2rem;
    }

    form {width: 100%}

    @media (min-width: 600px) {
      form {
        padding: 100px;
        box-sizing: border-box;
      }
    }

body(ng-controller='IndexController as controller')
  h2 angular-mn-chips
  include github-corner

  .mn-layout-fullscreen.mn-layout-centered
    .mn-layout-container
      form.mn-layout-column
        p {{ controller.houses }}
        mn-chips.flex(placeholder='Houses' ng-model='controller.houses')
        p {{ controller.names }}
        mn-chips.flex(placeholder='Names' ng-model='controller.names')
        //- button(ng-click='controller.add()') add

  .docs.mn-layout-container
    mn-code.sh.
      npm install --save angular-mn-chips

    p And bundle dependencies and main files in <strong>dist/</strong> with your preferred tool.

    h3 usage
    mn-code.js.
      // add dependency in you module
      angular.module('app', [
        'mn-chips'
      ]);

    p And then, in your html, you can use the tag

    mn-code.html.
      <!-- checkbox -->
      <mn-chips ng-model="house"></mn-chips>

    p For more details check <a href="https://github.com/minimalist-components/mn-chips">mn-chips docs</a>.

  block scripts
    script(src='/docs/vendor.js')
    script(src='/dist/angular-mn-chips.js')

  script.
    var houses = document.querySelector('mn-chips[ng-model="controller.houses"]')
    var names = document.querySelector('mn-chips[ng-model="controller.names"]')
    angular.module('app', [
      'mn-chips',
    ])

    angular
      .module('app')
      .controller('IndexController', IndexController);

    function IndexController() {
      this.houses = ['stark']

      //- this.add = add

      //- function add() {
      //-   const houses = [
      //-     'stark', 
      //-     'lannister', 
      //-     'baratheon',
      //-     'tully',
      //-     'targaryen',
      //-     'dotraki',
      //-   ]
      //-   const random = parseInt(Math.random() * houses.length)
      //-   //- this.houses = [houses[random]]
      //-   this.houses.push(houses[random])
      //- }
    }

