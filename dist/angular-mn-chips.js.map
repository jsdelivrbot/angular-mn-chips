{"version":3,"sources":["mn-option/mn-option.directive.js","app.js"],"names":["mnChipsDirective","$parse","$timeout","controller","$scope","$element","$attrs","name","attr","ngModel","split","length","find","link","scope","element","attributes","modelValue","angular","equals","value","assign","on","$apply","restrict","require","module","$inject","directive"],"mappings":"YAIA,SAASA,kBAAiBC,OAAQC,UAQhC,QAASC,YAAWC,OAAQC,SAAUC,QACpC,GAAMC,MAAOF,SAASG,KAAK,SACtBF,OAAOG,QAAQC,MAAM,KAAKJ,OAAOG,QAAQC,MAAM,KAAKC,OAAS,EAElEN,UAASG,KAAK,OAAQD,MACtBF,SAASO,KAAK,SAASJ,KAAK,OAAQD,MAGtC,QAASM,MAAKC,MAAOC,QAASC,YAC5B,GAAMC,YAAahB,OAAOe,WAAWP,SAASK,MACzBI,SAAQC,OAAOJ,QAAQ,GAAGK,MAAOH,aAGpDf,SAAS,WAEPa,QAAQ,GAAGK,MAAQH,WACnBhB,OAAOe,WAAWP,SAASY,OAAOP,MAAOC,QAAQ,GAAGK,QAAnD,GAGLL,QAAQO,GAAG,SAAU,WAEnBpB,SAAS,WACPD,OAAOe,WAAWP,SAASY,OAAOP,MAAOC,QAAQ,GAAGK,OACpDN,MAAMS,UACL,KA/BP,OACEC,SAAU,IACVrB,WAAAA,WACAU,KAAAA,KACAY,QAAS,WCTbP,QAAQQ,OAAO,eDCf1B,iBAAiB2B,SAAW,SAAU,YADtCT,QACGQ,OAAO,YACPE,UAAU,UAAW5B","file":"angular-mn-chips.js","sourcesContent":["angular\n  .module('mn-chips')\n  .directive('mnChips', mnChipsDirective)\n\nfunction mnChipsDirective($parse, $timeout) {\n  return {\n    restrict: 'E',\n    controller,\n    link,\n    require: 'ngModel',\n  }\n\n  function controller($scope, $element, $attrs) {\n    const name = $element.attr('name')\n      || $attrs.ngModel.split('.')[$attrs.ngModel.split('.').length - 1]\n\n    $element.attr('name', name)\n    $element.find('input').attr('name', name)\n  }\n\n  function link(scope, element, attributes) {\n    const modelValue = $parse(attributes.ngModel)(scope)\n    const modelApplied = angular.equals(element[0].value, modelValue)\n\n    if (!modelApplied) {\n      $timeout(() => {\n        element[0].value = modelValue\n        $parse(attributes.ngModel).assign(scope, element[0].value)\n      }, 0)\n    }\n\n    element.on('change', () => {\n      $timeout(() => {\n        $parse(attributes.ngModel).assign(scope, element[0].value)\n        scope.$apply()\n      }, 0)\n    })\n\n    // const dirtyLabel = element[0].querySelector('label + label')\n    // if (dirtyLabel) {\n    //   element[0].removeChild(dirtyLabel)\n    // }\n  }\n}\n","angular.module('mn-chips', [])\n"]}